package liu.bean;

import java.util.ArrayList;
import java.util.List;

public class PatientExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table patient
     *
     * @mbggenerated Thu Dec 29 21:08:19 CST 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table patient
     *
     * @mbggenerated Thu Dec 29 21:08:19 CST 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table patient
     *
     * @mbggenerated Thu Dec 29 21:08:19 CST 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbggenerated Thu Dec 29 21:08:19 CST 2022
     */
    public PatientExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbggenerated Thu Dec 29 21:08:19 CST 2022
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbggenerated Thu Dec 29 21:08:19 CST 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbggenerated Thu Dec 29 21:08:19 CST 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbggenerated Thu Dec 29 21:08:19 CST 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbggenerated Thu Dec 29 21:08:19 CST 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbggenerated Thu Dec 29 21:08:19 CST 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbggenerated Thu Dec 29 21:08:19 CST 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbggenerated Thu Dec 29 21:08:19 CST 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbggenerated Thu Dec 29 21:08:19 CST 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbggenerated Thu Dec 29 21:08:19 CST 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table patient
     *
     * @mbggenerated Thu Dec 29 21:08:19 CST 2022
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPatientNoIsNull() {
            addCriterion("PATIENT_NO is null");
            return (Criteria) this;
        }

        public Criteria andPatientNoIsNotNull() {
            addCriterion("PATIENT_NO is not null");
            return (Criteria) this;
        }

        public Criteria andPatientNoEqualTo(Integer value) {
            addCriterion("PATIENT_NO =", value, "patientNo");
            return (Criteria) this;
        }

        public Criteria andPatientNoNotEqualTo(Integer value) {
            addCriterion("PATIENT_NO <>", value, "patientNo");
            return (Criteria) this;
        }

        public Criteria andPatientNoGreaterThan(Integer value) {
            addCriterion("PATIENT_NO >", value, "patientNo");
            return (Criteria) this;
        }

        public Criteria andPatientNoGreaterThanOrEqualTo(Integer value) {
            addCriterion("PATIENT_NO >=", value, "patientNo");
            return (Criteria) this;
        }

        public Criteria andPatientNoLessThan(Integer value) {
            addCriterion("PATIENT_NO <", value, "patientNo");
            return (Criteria) this;
        }

        public Criteria andPatientNoLessThanOrEqualTo(Integer value) {
            addCriterion("PATIENT_NO <=", value, "patientNo");
            return (Criteria) this;
        }

        public Criteria andPatientNoIn(List<Integer> values) {
            addCriterion("PATIENT_NO in", values, "patientNo");
            return (Criteria) this;
        }

        public Criteria andPatientNoNotIn(List<Integer> values) {
            addCriterion("PATIENT_NO not in", values, "patientNo");
            return (Criteria) this;
        }

        public Criteria andPatientNoBetween(Integer value1, Integer value2) {
            addCriterion("PATIENT_NO between", value1, value2, "patientNo");
            return (Criteria) this;
        }

        public Criteria andPatientNoNotBetween(Integer value1, Integer value2) {
            addCriterion("PATIENT_NO not between", value1, value2, "patientNo");
            return (Criteria) this;
        }

        public Criteria andPatientNameIsNull() {
            addCriterion("PATIENT_NAME is null");
            return (Criteria) this;
        }

        public Criteria andPatientNameIsNotNull() {
            addCriterion("PATIENT_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andPatientNameEqualTo(String value) {
            addCriterion("PATIENT_NAME =", value, "patientName");
            return (Criteria) this;
        }

        public Criteria andPatientNameNotEqualTo(String value) {
            addCriterion("PATIENT_NAME <>", value, "patientName");
            return (Criteria) this;
        }

        public Criteria andPatientNameGreaterThan(String value) {
            addCriterion("PATIENT_NAME >", value, "patientName");
            return (Criteria) this;
        }

        public Criteria andPatientNameGreaterThanOrEqualTo(String value) {
            addCriterion("PATIENT_NAME >=", value, "patientName");
            return (Criteria) this;
        }

        public Criteria andPatientNameLessThan(String value) {
            addCriterion("PATIENT_NAME <", value, "patientName");
            return (Criteria) this;
        }

        public Criteria andPatientNameLessThanOrEqualTo(String value) {
            addCriterion("PATIENT_NAME <=", value, "patientName");
            return (Criteria) this;
        }

        public Criteria andPatientNameLike(String value) {
            addCriterion("PATIENT_NAME like", value, "patientName");
            return (Criteria) this;
        }

        public Criteria andPatientNameNotLike(String value) {
            addCriterion("PATIENT_NAME not like", value, "patientName");
            return (Criteria) this;
        }

        public Criteria andPatientNameIn(List<String> values) {
            addCriterion("PATIENT_NAME in", values, "patientName");
            return (Criteria) this;
        }

        public Criteria andPatientNameNotIn(List<String> values) {
            addCriterion("PATIENT_NAME not in", values, "patientName");
            return (Criteria) this;
        }

        public Criteria andPatientNameBetween(String value1, String value2) {
            addCriterion("PATIENT_NAME between", value1, value2, "patientName");
            return (Criteria) this;
        }

        public Criteria andPatientNameNotBetween(String value1, String value2) {
            addCriterion("PATIENT_NAME not between", value1, value2, "patientName");
            return (Criteria) this;
        }

        public Criteria andPatientGenderIsNull() {
            addCriterion("PATIENT_GENDER is null");
            return (Criteria) this;
        }

        public Criteria andPatientGenderIsNotNull() {
            addCriterion("PATIENT_GENDER is not null");
            return (Criteria) this;
        }

        public Criteria andPatientGenderEqualTo(String value) {
            addCriterion("PATIENT_GENDER =", value, "patientGender");
            return (Criteria) this;
        }

        public Criteria andPatientGenderNotEqualTo(String value) {
            addCriterion("PATIENT_GENDER <>", value, "patientGender");
            return (Criteria) this;
        }

        public Criteria andPatientGenderGreaterThan(String value) {
            addCriterion("PATIENT_GENDER >", value, "patientGender");
            return (Criteria) this;
        }

        public Criteria andPatientGenderGreaterThanOrEqualTo(String value) {
            addCriterion("PATIENT_GENDER >=", value, "patientGender");
            return (Criteria) this;
        }

        public Criteria andPatientGenderLessThan(String value) {
            addCriterion("PATIENT_GENDER <", value, "patientGender");
            return (Criteria) this;
        }

        public Criteria andPatientGenderLessThanOrEqualTo(String value) {
            addCriterion("PATIENT_GENDER <=", value, "patientGender");
            return (Criteria) this;
        }

        public Criteria andPatientGenderLike(String value) {
            addCriterion("PATIENT_GENDER like", value, "patientGender");
            return (Criteria) this;
        }

        public Criteria andPatientGenderNotLike(String value) {
            addCriterion("PATIENT_GENDER not like", value, "patientGender");
            return (Criteria) this;
        }

        public Criteria andPatientGenderIn(List<String> values) {
            addCriterion("PATIENT_GENDER in", values, "patientGender");
            return (Criteria) this;
        }

        public Criteria andPatientGenderNotIn(List<String> values) {
            addCriterion("PATIENT_GENDER not in", values, "patientGender");
            return (Criteria) this;
        }

        public Criteria andPatientGenderBetween(String value1, String value2) {
            addCriterion("PATIENT_GENDER between", value1, value2, "patientGender");
            return (Criteria) this;
        }

        public Criteria andPatientGenderNotBetween(String value1, String value2) {
            addCriterion("PATIENT_GENDER not between", value1, value2, "patientGender");
            return (Criteria) this;
        }

        public Criteria andPatientDateStartIsNull() {
            addCriterion("PATIENT_DATE_START is null");
            return (Criteria) this;
        }

        public Criteria andPatientDateStartIsNotNull() {
            addCriterion("PATIENT_DATE_START is not null");
            return (Criteria) this;
        }

        public Criteria andPatientDateStartEqualTo(String value) {
            addCriterion("PATIENT_DATE_START =", value, "patientDateStart");
            return (Criteria) this;
        }

        public Criteria andPatientDateStartNotEqualTo(String value) {
            addCriterion("PATIENT_DATE_START <>", value, "patientDateStart");
            return (Criteria) this;
        }

        public Criteria andPatientDateStartGreaterThan(String value) {
            addCriterion("PATIENT_DATE_START >", value, "patientDateStart");
            return (Criteria) this;
        }

        public Criteria andPatientDateStartGreaterThanOrEqualTo(String value) {
            addCriterion("PATIENT_DATE_START >=", value, "patientDateStart");
            return (Criteria) this;
        }

        public Criteria andPatientDateStartLessThan(String value) {
            addCriterion("PATIENT_DATE_START <", value, "patientDateStart");
            return (Criteria) this;
        }

        public Criteria andPatientDateStartLessThanOrEqualTo(String value) {
            addCriterion("PATIENT_DATE_START <=", value, "patientDateStart");
            return (Criteria) this;
        }

        public Criteria andPatientDateStartLike(String value) {
            addCriterion("PATIENT_DATE_START like", value, "patientDateStart");
            return (Criteria) this;
        }

        public Criteria andPatientDateStartNotLike(String value) {
            addCriterion("PATIENT_DATE_START not like", value, "patientDateStart");
            return (Criteria) this;
        }

        public Criteria andPatientDateStartIn(List<String> values) {
            addCriterion("PATIENT_DATE_START in", values, "patientDateStart");
            return (Criteria) this;
        }

        public Criteria andPatientDateStartNotIn(List<String> values) {
            addCriterion("PATIENT_DATE_START not in", values, "patientDateStart");
            return (Criteria) this;
        }

        public Criteria andPatientDateStartBetween(String value1, String value2) {
            addCriterion("PATIENT_DATE_START between", value1, value2, "patientDateStart");
            return (Criteria) this;
        }

        public Criteria andPatientDateStartNotBetween(String value1, String value2) {
            addCriterion("PATIENT_DATE_START not between", value1, value2, "patientDateStart");
            return (Criteria) this;
        }

        public Criteria andPatientDeptIsNull() {
            addCriterion("PATIENT_DEPT is null");
            return (Criteria) this;
        }

        public Criteria andPatientDeptIsNotNull() {
            addCriterion("PATIENT_DEPT is not null");
            return (Criteria) this;
        }

        public Criteria andPatientDeptEqualTo(Integer value) {
            addCriterion("PATIENT_DEPT =", value, "patientDept");
            return (Criteria) this;
        }

        public Criteria andPatientDeptNotEqualTo(Integer value) {
            addCriterion("PATIENT_DEPT <>", value, "patientDept");
            return (Criteria) this;
        }

        public Criteria andPatientDeptGreaterThan(Integer value) {
            addCriterion("PATIENT_DEPT >", value, "patientDept");
            return (Criteria) this;
        }

        public Criteria andPatientDeptGreaterThanOrEqualTo(Integer value) {
            addCriterion("PATIENT_DEPT >=", value, "patientDept");
            return (Criteria) this;
        }

        public Criteria andPatientDeptLessThan(Integer value) {
            addCriterion("PATIENT_DEPT <", value, "patientDept");
            return (Criteria) this;
        }

        public Criteria andPatientDeptLessThanOrEqualTo(Integer value) {
            addCriterion("PATIENT_DEPT <=", value, "patientDept");
            return (Criteria) this;
        }

        public Criteria andPatientDeptIn(List<Integer> values) {
            addCriterion("PATIENT_DEPT in", values, "patientDept");
            return (Criteria) this;
        }

        public Criteria andPatientDeptNotIn(List<Integer> values) {
            addCriterion("PATIENT_DEPT not in", values, "patientDept");
            return (Criteria) this;
        }

        public Criteria andPatientDeptBetween(Integer value1, Integer value2) {
            addCriterion("PATIENT_DEPT between", value1, value2, "patientDept");
            return (Criteria) this;
        }

        public Criteria andPatientDeptNotBetween(Integer value1, Integer value2) {
            addCriterion("PATIENT_DEPT not between", value1, value2, "patientDept");
            return (Criteria) this;
        }

        public Criteria andPatientStateIsNull() {
            addCriterion("PATIENT_STATE is null");
            return (Criteria) this;
        }

        public Criteria andPatientStateIsNotNull() {
            addCriterion("PATIENT_STATE is not null");
            return (Criteria) this;
        }

        public Criteria andPatientStateEqualTo(String value) {
            addCriterion("PATIENT_STATE =", value, "patientState");
            return (Criteria) this;
        }

        public Criteria andPatientStateNotEqualTo(String value) {
            addCriterion("PATIENT_STATE <>", value, "patientState");
            return (Criteria) this;
        }

        public Criteria andPatientStateGreaterThan(String value) {
            addCriterion("PATIENT_STATE >", value, "patientState");
            return (Criteria) this;
        }

        public Criteria andPatientStateGreaterThanOrEqualTo(String value) {
            addCriterion("PATIENT_STATE >=", value, "patientState");
            return (Criteria) this;
        }

        public Criteria andPatientStateLessThan(String value) {
            addCriterion("PATIENT_STATE <", value, "patientState");
            return (Criteria) this;
        }

        public Criteria andPatientStateLessThanOrEqualTo(String value) {
            addCriterion("PATIENT_STATE <=", value, "patientState");
            return (Criteria) this;
        }

        public Criteria andPatientStateLike(String value) {
            addCriterion("PATIENT_STATE like", value, "patientState");
            return (Criteria) this;
        }

        public Criteria andPatientStateNotLike(String value) {
            addCriterion("PATIENT_STATE not like", value, "patientState");
            return (Criteria) this;
        }

        public Criteria andPatientStateIn(List<String> values) {
            addCriterion("PATIENT_STATE in", values, "patientState");
            return (Criteria) this;
        }

        public Criteria andPatientStateNotIn(List<String> values) {
            addCriterion("PATIENT_STATE not in", values, "patientState");
            return (Criteria) this;
        }

        public Criteria andPatientStateBetween(String value1, String value2) {
            addCriterion("PATIENT_STATE between", value1, value2, "patientState");
            return (Criteria) this;
        }

        public Criteria andPatientStateNotBetween(String value1, String value2) {
            addCriterion("PATIENT_STATE not between", value1, value2, "patientState");
            return (Criteria) this;
        }

        public Criteria andPatientDocIsNull() {
            addCriterion("PATIENT_DOC is null");
            return (Criteria) this;
        }

        public Criteria andPatientDocIsNotNull() {
            addCriterion("PATIENT_DOC is not null");
            return (Criteria) this;
        }

        public Criteria andPatientDocEqualTo(Integer value) {
            addCriterion("PATIENT_DOC =", value, "patientDoc");
            return (Criteria) this;
        }

        public Criteria andPatientDocNotEqualTo(Integer value) {
            addCriterion("PATIENT_DOC <>", value, "patientDoc");
            return (Criteria) this;
        }

        public Criteria andPatientDocGreaterThan(Integer value) {
            addCriterion("PATIENT_DOC >", value, "patientDoc");
            return (Criteria) this;
        }

        public Criteria andPatientDocGreaterThanOrEqualTo(Integer value) {
            addCriterion("PATIENT_DOC >=", value, "patientDoc");
            return (Criteria) this;
        }

        public Criteria andPatientDocLessThan(Integer value) {
            addCriterion("PATIENT_DOC <", value, "patientDoc");
            return (Criteria) this;
        }

        public Criteria andPatientDocLessThanOrEqualTo(Integer value) {
            addCriterion("PATIENT_DOC <=", value, "patientDoc");
            return (Criteria) this;
        }

        public Criteria andPatientDocIn(List<Integer> values) {
            addCriterion("PATIENT_DOC in", values, "patientDoc");
            return (Criteria) this;
        }

        public Criteria andPatientDocNotIn(List<Integer> values) {
            addCriterion("PATIENT_DOC not in", values, "patientDoc");
            return (Criteria) this;
        }

        public Criteria andPatientDocBetween(Integer value1, Integer value2) {
            addCriterion("PATIENT_DOC between", value1, value2, "patientDoc");
            return (Criteria) this;
        }

        public Criteria andPatientDocNotBetween(Integer value1, Integer value2) {
            addCriterion("PATIENT_DOC not between", value1, value2, "patientDoc");
            return (Criteria) this;
        }

        public Criteria andPatientRoomIsNull() {
            addCriterion("PATIENT_ROOM is null");
            return (Criteria) this;
        }

        public Criteria andPatientRoomIsNotNull() {
            addCriterion("PATIENT_ROOM is not null");
            return (Criteria) this;
        }

        public Criteria andPatientRoomEqualTo(Integer value) {
            addCriterion("PATIENT_ROOM =", value, "patientRoom");
            return (Criteria) this;
        }

        public Criteria andPatientRoomNotEqualTo(Integer value) {
            addCriterion("PATIENT_ROOM <>", value, "patientRoom");
            return (Criteria) this;
        }

        public Criteria andPatientRoomGreaterThan(Integer value) {
            addCriterion("PATIENT_ROOM >", value, "patientRoom");
            return (Criteria) this;
        }

        public Criteria andPatientRoomGreaterThanOrEqualTo(Integer value) {
            addCriterion("PATIENT_ROOM >=", value, "patientRoom");
            return (Criteria) this;
        }

        public Criteria andPatientRoomLessThan(Integer value) {
            addCriterion("PATIENT_ROOM <", value, "patientRoom");
            return (Criteria) this;
        }

        public Criteria andPatientRoomLessThanOrEqualTo(Integer value) {
            addCriterion("PATIENT_ROOM <=", value, "patientRoom");
            return (Criteria) this;
        }

        public Criteria andPatientRoomIn(List<Integer> values) {
            addCriterion("PATIENT_ROOM in", values, "patientRoom");
            return (Criteria) this;
        }

        public Criteria andPatientRoomNotIn(List<Integer> values) {
            addCriterion("PATIENT_ROOM not in", values, "patientRoom");
            return (Criteria) this;
        }

        public Criteria andPatientRoomBetween(Integer value1, Integer value2) {
            addCriterion("PATIENT_ROOM between", value1, value2, "patientRoom");
            return (Criteria) this;
        }

        public Criteria andPatientRoomNotBetween(Integer value1, Integer value2) {
            addCriterion("PATIENT_ROOM not between", value1, value2, "patientRoom");
            return (Criteria) this;
        }

        public Criteria andPatientBeIsNull() {
            addCriterion("PATIENT_BE is null");
            return (Criteria) this;
        }

        public Criteria andPatientBeIsNotNull() {
            addCriterion("PATIENT_BE is not null");
            return (Criteria) this;
        }

        public Criteria andPatientBeEqualTo(Integer value) {
            addCriterion("PATIENT_BE =", value, "patientBe");
            return (Criteria) this;
        }

        public Criteria andPatientBeNotEqualTo(Integer value) {
            addCriterion("PATIENT_BE <>", value, "patientBe");
            return (Criteria) this;
        }

        public Criteria andPatientBeGreaterThan(Integer value) {
            addCriterion("PATIENT_BE >", value, "patientBe");
            return (Criteria) this;
        }

        public Criteria andPatientBeGreaterThanOrEqualTo(Integer value) {
            addCriterion("PATIENT_BE >=", value, "patientBe");
            return (Criteria) this;
        }

        public Criteria andPatientBeLessThan(Integer value) {
            addCriterion("PATIENT_BE <", value, "patientBe");
            return (Criteria) this;
        }

        public Criteria andPatientBeLessThanOrEqualTo(Integer value) {
            addCriterion("PATIENT_BE <=", value, "patientBe");
            return (Criteria) this;
        }

        public Criteria andPatientBeIn(List<Integer> values) {
            addCriterion("PATIENT_BE in", values, "patientBe");
            return (Criteria) this;
        }

        public Criteria andPatientBeNotIn(List<Integer> values) {
            addCriterion("PATIENT_BE not in", values, "patientBe");
            return (Criteria) this;
        }

        public Criteria andPatientBeBetween(Integer value1, Integer value2) {
            addCriterion("PATIENT_BE between", value1, value2, "patientBe");
            return (Criteria) this;
        }

        public Criteria andPatientBeNotBetween(Integer value1, Integer value2) {
            addCriterion("PATIENT_BE not between", value1, value2, "patientBe");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table patient
     *
     * @mbggenerated do_not_delete_during_merge Thu Dec 29 21:08:19 CST 2022
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table patient
     *
     * @mbggenerated Thu Dec 29 21:08:19 CST 2022
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}